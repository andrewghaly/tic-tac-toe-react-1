{"version":3,"sources":["contexts/ticTacToeContext.js","components/boardPiece.jsx","components/boardRow.jsx","components/board.jsx","App.js","reportWebVitals.js","index.js"],"names":["TicTacToeContext","React","createContext","BoardPiece","state","isCenter","isCenterRow","boardPieceValue","changeBoardPieceValue","context","setState","nextValue","changeValue","this","props","undefined","centerClass","centerRowClass","Consumer","className","onClick","Component","BoardRow","Board","Provider","value","style","backgroundColor","width","maxWidth","App","display","justifyContent","alignItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAEeA,EADUC,IAAMC,gBCiDhBC,E,4MA9CbC,MAAQ,CACNC,UAAU,EACVC,aAAa,EACbC,gBAAiB,K,EAcnBC,sBAAwB,SAACC,GAGC,MAFE,EAAKL,MAAzBG,kBAGJ,EAAKG,SAAS,CAAEH,gBAAiBE,EAAQE,YACzCF,EAAQG,gB,kEAhBS,IAAD,EACcC,KAAKC,MAA/BT,EADY,EACZA,SAAUC,EADE,EACFA,YAEdD,OADeU,IAAbV,EAMJQ,KAAKH,SAAS,CAAEL,WAAUC,kB,+BAYlB,IAAD,OACDU,EAAcH,KAAKT,MAAMC,SAAW,KAAO,GAC3CY,EAAiBJ,KAAKT,MAAME,YAAc,IAAM,GAC9CC,EAAoBM,KAAKT,MAAzBG,gBAER,OACE,cAAC,EAAiBW,SAAlB,UACG,SAACT,GAAD,OACC,oBACEU,UAAS,iBAAYH,EAAZ,YAA2BC,GACpCG,QAAS,kBAAM,EAAKZ,sBAAsBC,IAF5C,SAIGF,W,GAvCYc,aC0BVC,E,4MAzBXlB,MAAQ,G,kEAEa,IACXE,EAAgBO,KAAKC,MAArBR,YAEFA,OADgBS,IAAhBT,EAMJO,KAAKH,SAAS,CAAEJ,kB,+BAEV,IACEA,EAAgBO,KAAKT,MAArBE,YAER,YACoBS,IAAhBT,GACA,+BACI,cAAC,EAAD,CAAYA,YAAaA,IACzB,cAAC,EAAD,CAAYA,YAAaA,EAAaD,UAAU,IAChD,cAAC,EAAD,CAAYC,YAAaA,W,GArBlBe,aC0CRE,E,4MAzCbnB,MAAQ,CACNO,UAAW,K,EAEbC,YAAc,WAAO,IACXD,EAAc,EAAKP,MAAnBO,UACU,MAAdA,EACF,EAAKD,SAAS,CAAEC,UAAW,MACJ,MAAdA,EACT,EAAKD,SAAS,CAAEC,UAAW,MACJ,MAAdA,GACT,EAAKD,SAAS,CAAEC,UAAW,O,uDAGrB,IACAA,EAAcE,KAAKT,MAAnBO,UACR,OACE,cAAC,EAAiBa,SAAlB,CACEC,MAAO,CAAEd,YAAWC,YAAaC,KAAKD,aADxC,SAGE,uBACEc,MAAO,CAILC,gBAAiB,YACjBC,MAAO,OACPC,SAAU,SAPd,SAWE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUvB,aAAa,IACvB,cAAC,EAAD,e,GAlCQe,aCaLS,MAbf,WACE,OACE,qBAAKX,UAAU,YAAYO,MAAO,CAChCK,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAHd,SAKE,cAAC,EAAD,OCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ea6994ac.chunk.js","sourcesContent":["import React from 'react';\nconst TicTacToeContext = React.createContext();\nexport default TicTacToeContext;","import React, { Component } from \"react\";\nimport TicTacToeContext from \"../contexts/ticTacToeContext\";\n\nclass BoardPiece extends Component {\n  state = {\n    isCenter: false,\n    isCenterRow: false,\n    boardPieceValue: \"_\",\n  };\n\n  componentDidMount() {\n    let { isCenter, isCenterRow } = this.props;\n    if (isCenter === undefined) {\n      isCenter = false;\n    } else {\n      isCenter = true;\n    }\n\n    this.setState({ isCenter, isCenterRow });\n  }\n\n  changeBoardPieceValue = (context) => {\n    let { boardPieceValue } = this.state;\n\n    if (boardPieceValue === \"_\") {\n      this.setState({ boardPieceValue: context.nextValue });\n      context.changeValue()\n    }\n  };\n\n  render() {\n    const centerClass = this.state.isCenter ? \"v \" : \"\";\n    const centerRowClass = this.state.isCenterRow ? \"h\" : \"\";\n    const { boardPieceValue } = this.state;\n\n    return (\n      <TicTacToeContext.Consumer>\n        {(context) => (\n          <td\n            className={`square ${centerClass} ${centerRowClass}`}\n            onClick={() => this.changeBoardPieceValue(context)}\n          >\n            {boardPieceValue}\n          </td>\n        )}\n      </TicTacToeContext.Consumer>\n    );\n  }\n}\n\nexport default BoardPiece;","import React, { Component } from 'react';\nimport BoardPiece from './boardPiece';\n\nclass BoardRow extends Component {\n    state = {\n    }\n    componentDidMount() {\n        let { isCenterRow } = this.props;\n        if (isCenterRow === undefined) {\n            isCenterRow = false;\n        } else {\n            isCenterRow = true;\n        }\n\n        this.setState({ isCenterRow })\n    }\n    render() {\n        const { isCenterRow } = this.state;\n\n        return (\n            isCenterRow !== undefined &&\n            <tr>\n                <BoardPiece isCenterRow={isCenterRow}></BoardPiece>\n                <BoardPiece isCenterRow={isCenterRow} isCenter={true}></BoardPiece>\n                <BoardPiece isCenterRow={isCenterRow}></BoardPiece>\n            </tr>);\n    }\n}\n\nexport default BoardRow;","import React, { Component } from \"react\";\nimport TicTacToeContext from \"../contexts/ticTacToeContext\";\nimport BoardRow from \"./boardRow\";\nclass Board extends Component {\n  state = {\n    nextValue: \"x\",\n  };\n  changeValue = () => {\n    const { nextValue } = this.state;\n    if (nextValue === \"_\") {\n      this.setState({ nextValue: \"x\" });\n    } else if (nextValue === \"x\") {\n      this.setState({ nextValue: \"o\" });\n    } else if (nextValue === \"o\") {\n      this.setState({ nextValue: \"x\" });\n    }\n  };\n  render() {\n    const { nextValue } = this.state;\n    return (\n      <TicTacToeContext.Provider\n        value={{ nextValue, changeValue: this.changeValue }}\n      >\n        <table\n          style={{\n            // margin: \"auto\",\n            // padding: \"5px\",\n            //marginTop: \"150px\",\n            backgroundColor: \"lightblue\",\n            width: \"100%\",\n            maxWidth: \"375px\"\n            // height: \"375px\",\n          }}\n        >\n          <tbody>\n            <BoardRow></BoardRow>\n            <BoardRow isCenterRow={true}></BoardRow>\n            <BoardRow></BoardRow>\n          </tbody>\n        </table>\n      </TicTacToeContext.Provider>\n    );\n  }\n}\n\nexport default Board;\n","import './App.css';\nimport Board from './components/board';\n\nfunction App() {\n  return (\n    <div className=\"container\" style={{\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}>\n      <Board >\n      </Board>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}